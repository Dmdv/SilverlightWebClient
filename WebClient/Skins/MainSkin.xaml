<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:Controls="clr-namespace:WebClient.ICS.Client.Controls" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d">

    <SolidColorBrush x:Key="ButtonTextYellowBrush" Color="#FFFF9900"/>
    <SolidColorBrush x:Key="CommonTextBrush" Color="#FF1B75BB"/>
    <SolidColorBrush x:Key="ButtonTextBlueBrush" Color="#FF1B5799"/>

    <!-- ValidationToolTipTemplate -->
    
    <ControlTemplate x:Key="ValidationToolTipTemplate">
		<Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
			<Grid.RenderTransform>
				<TranslateTransform x:Name="xform" X="-25"/>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="OpenStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0"/>
						<VisualTransition GeneratedDuration="0:0:0.2" To="Open">
							<Storyboard>
								<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
									<DoubleAnimation.EasingFunction>
										<BackEase Amplitude=".3" EasingMode="EaseOut"/>
									</DoubleAnimation.EasingFunction>
								</DoubleAnimation>
								<DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Closed">
						<Storyboard>
							<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Open">
						<Storyboard>
							<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
							<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
			<Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
			<Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
			<Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
			<Border Background="#FFDC000C" CornerRadius="2"/>
			<Border CornerRadius="2">
				<TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
			</Border>
		</Grid>
	</ControlTemplate>

    <!-- ListBoxStyle -->

    <Style x:Key="ListBoxStyle" TargetType="ListBox">
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Background" Value="#FFFFFFFF"/>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
                <ControlTemplate TargetType="ListBox">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
							<ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}">
								<ItemsPresenter/>
							</ScrollViewer>
						</Border>
						<Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
							<ToolTipService.ToolTip>
								<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
									<ToolTip.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>true</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</ToolTip.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
							<Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
								<Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="-1,3,0,0"/>
								<Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="-1,3,0,0"/>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <SolidColorBrush x:Key="ItemsPanelBrush" Color="#99FFFFFF"/>
    <LinearGradientBrush x:Key="headerBarBG" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF284292"/>
        <GradientStop Color="#FF2175B8" Offset="0.26499998569488525"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBackground" Color="#99FFFFFF"/>
    <SolidColorBrush x:Key="TextHeaderBrush" Color="#FF1B75BB"/>

    <!-- Текст для узлов -->
    <Style x:Key="TreeNodeTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource TextHeaderBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Left" />
    </Style>

    <!-- Текст для настроек -->
    <Style x:Key="TreeSettingTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Courier New"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{StaticResource TextHeaderBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Left" />
    </Style>

    <!-- Tooltip -->

    <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="Translation" X="-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="Translation">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="Translation"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
            <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
            <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
            <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
            <Border Background="#FFDC000C" CornerRadius="2">
                <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
            </Border>
        </Grid>
    </ControlTemplate>
    
    <!-- Toolkit Button brushes -->
    
    <LinearGradientBrush x:Key="ExpanderArrowFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFBFBFBF" Offset="0.5"/>
        <GradientStop Color="#FF878787" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowHoverFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF0F8FE" Offset="0"/>
        <GradientStop Color="#FFE0F3FE" Offset="0.3"/>
        <GradientStop Color="#FF6FA7C5" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowPressedFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDCF0FA" Offset="0"/>
        <GradientStop Color="#FFC5E6F7" Offset="0.2"/>
        <GradientStop Color="#FF5690D0" Offset="1"/>
    </LinearGradientBrush>

    <!-- Toggle Button Expander style -->

    <ControlTemplate x:Key="ToggleButtonExpanderTemplate" TargetType="ToggleButton">
        <Grid Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="00:00:00"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Data" Storyboard.TargetName="arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
                        <VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation BeginTime="0" To="#FF3C7FB1" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="circle"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.Fill)" Storyboard.TargetName="circle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowHoverFill}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimation BeginTime="0" To="#222" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="arrow"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation BeginTime="0" To="#FF526C7B" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="circle"/>
                            <DoubleAnimation BeginTime="0" To="1.5" Storyboard.TargetProperty="StrokeThickness" Storyboard.TargetName="circle"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.Fill)" Storyboard.TargetName="circle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderArrowPressedFill}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimation BeginTime="0" To="#FF003366" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="arrow"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Padding="{TemplateBinding Padding}">
                <Grid Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="19"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Ellipse x:Name="circle" Fill="{StaticResource ExpanderArrowFill}" HorizontalAlignment="Center" Height="12" Stroke="DarkGray" VerticalAlignment="Center" Width="12"/>
                        <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                    </Grid>
                    <ContentPresenter x:Name="header" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="Stretch" Margin="4,0,0,0" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Stroke="#FF448DCA" StrokeThickness="1" Visibility="Collapsed"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ToggleButtonCommonTemplate" TargetType="ToggleButton">
        <Grid x:Name="Root" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" To="#FF1BBBFA" Storyboard.TargetProperty="(Path.Stroke).Color" Storyboard.TargetName="UncheckedVisual"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="UncheckedVisual"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid HorizontalAlignment="Right" Margin="2 2 5 2">
                <Path x:Name="UncheckedVisual" Data="M 0,0 L 0,9 L 5,4.5 Z" Fill="#FFFFFFFF" HorizontalAlignment="Right" Height="9" Stroke="#FF989898" StrokeThickness="1" StrokeLineJoin="Miter" VerticalAlignment="Center" Width="6"/>
                <Path x:Name="CheckedVisual" Data="M 6,0 L 6,6 L 0,6 Z" Fill="#FF262626" HorizontalAlignment="Center" Height="6" Opacity="0" StrokeLineJoin="Miter" VerticalAlignment="Center" Width="6"/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <!-- Submit and Cancel button template -->

    <ControlTemplate x:Key="SubmitButtonTemplate" TargetType="Button">
        <Grid Height="{TemplateBinding Height}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="00:00:00.3"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="00:00:00.3" />
                        <VisualTransition From="Disabled" GeneratedDuration="00:00:00.3000000" To="Normal"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BgEnabled" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BgEnabled" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF6C6C6C"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FEFFFFFF"/>
                                <SplineColorKeyFrame KeyTime="00:00:01" Value="#FF006C3B"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BgEnabled" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="105"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="9" KeySpline="0.5,0,0.5,1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="105" KeySpline="0.5,0,0.5,1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">

                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BgEnabled" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BgEnabled" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF006C3B"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FEFFFFFF"/>
                                <SplineColorKeyFrame KeyTime="00:00:01" Value="#FF6C6C6C"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BgEnabled" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="105"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="9" KeySpline="0.5,0,0.5,1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="105" KeySpline="0.5,0,0.5,1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Width="105" x:Name="BgEnabled" Background="#FF006C3B" BorderBrush="#FFFFFFFF" BorderThickness="2,2,1,2" CornerRadius="9,0,0,9">
                <TextBlock x:Name="textBlock" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFFFFFFF" />
            </Border>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="CancelButtonTemplate" TargetType="Button">
        <Grid Height="{TemplateBinding Height}">
            <Border Width="105" BorderBrush="#FFFFFFFF" BorderThickness="1,2,2,2" CornerRadius="0,9,9,0" Background="#FFFFFFFF"/>
            <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF666666" Margin="-9,0,0,0" />
        </Grid>
    </ControlTemplate>

    <!-- Toolkit button expander style -->
    
    <Style x:Key="ToggleButtonExpanderStyle" TargetType="ToggleButton">
        <Setter Property="Template" Value="{StaticResource ToggleButtonExpanderTemplate}"/>
    </Style>

    <!-- Toolkit button common style -->

    <Style x:Key="ToggleButtonCommonStyle" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="Template" Value="{StaticResource ToggleButtonCommonTemplate}"/>
    </Style>
    
    <LinearGradientBrush x:Key="GradientBrushBase" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="#CC75A0BC" Offset="0"/>
    	<GradientStop Color="#99EEF9FF" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="DarkTextBrush" Color="#FF002541"/>

    <!-- ButtonCommonTemplate -->

    <Style x:Key="ButtonCommonTemplate" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Height="{TemplateBinding Height}" Cursor="Hand">
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualStateGroup.Transitions>
                					<VisualTransition GeneratedDuration="0" To="MouseOver"/>
                				</VisualStateGroup.Transitions>
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<ColorAnimation Duration="0" To="#CCABABAB" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BgEnabled" d:IsOptimized="True"/>
                						<ColorAnimation Duration="0" To="#E8C6C6C6" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BgEnabled" d:IsOptimized="True"/>
                						<ColorAnimation Duration="0" To="#BBFFFFFF" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BgEnabled" d:IsOptimized="True"/>
                						<DoubleAnimation Duration="0" To="0.364" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="BgEnabled" d:IsOptimized="True"/>
                						<ColorAnimation Duration="0" To="#CFA1A8AD" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BgEnabled" d:IsOptimized="True"/>
                						<ColorAnimation Duration="0" To="#C9FFFFFF" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BgEnabled" d:IsOptimized="True"/>
                						<ColorAnimation Duration="0" To="#E6313131" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<ColorAnimation Duration="0" To="#CC106C9D" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BgEnabled" d:IsOptimized="True"/>
                						<ColorAnimation Duration="0" To="#B59CD4FF" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BgEnabled" d:IsOptimized="True"/>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Pressed">
                					<Storyboard>
                						<ColorAnimation Duration="0" To="#CC2FB2F9" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BgEnabled" d:IsOptimized="True"/>
                						<ColorAnimation Duration="0" To="#CABFEBFF" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BgEnabled" d:IsOptimized="True"/>
                						<ColorAnimation Duration="0" To="#CCD0EDFF" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BgEnabled" d:IsOptimized="True"/>
                						<ColorAnimation Duration="0" To="#FF080808" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="FocusStates">
                				<VisualState x:Name="Unfocused"/>
                				<VisualState x:Name="Focused"/>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Border x:Name="BgEnabled" BorderThickness="1" CornerRadius="9">
                			<Border.BorderBrush>
                				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                					<GradientStop Color="#CF618FAD" Offset="1"/>
                					<GradientStop Color="#CCF5FBFF" Offset="0.003"/>
                				</LinearGradientBrush>
                			</Border.BorderBrush>
                			<Border.Background>
                				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                					<GradientStop Color="#CAF0F8FE" Offset="0"/>
                					<GradientStop Color="#CFE0F3FE" Offset="0.3"/>
                					<GradientStop Color="#CC7EAAC2" Offset="1"/>
                				</LinearGradientBrush>
                			</Border.Background>
                			<TextBlock x:Name="textBlock" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#E6002F52" FontWeight="Bold"/>
                		</Border>
                	</Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!-- ElasticButtonStyle -->

    <Style x:Key="ElasticButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Grid" RenderTransformOrigin="0.5,0.5">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal"/>
                                    <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                    <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="Normal"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="Grid">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="Grid">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="1.023" Storyboard.TargetProperty="(Shape.Fill).(RadialGradientBrush.RadiusY)" Storyboard.TargetName="Rectangle" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0:0:0.1" To="0.914" Storyboard.TargetProperty="(Shape.Fill).(RadialGradientBrush.RadiusX)" Storyboard.TargetName="Rectangle" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RenderTransform>
                            <CompositeTransform/>
                        </Grid.RenderTransform>
                        <Ellipse Opacity="0.495" StrokeThickness="0" Height="17" VerticalAlignment="Bottom">
                            <Ellipse.Effect>
                                <BlurEffect/>
                            </Ellipse.Effect>
                            <Ellipse.Fill>
                                <RadialGradientBrush RadiusY="0.46" RadiusX="0.46" GradientOrigin="0.475,0.5">
                                    <GradientStop Color="#FF6A6A6A" Offset="0"/>
                                    <GradientStop Color="#006A6A6A" Offset="0.863"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Rectangle Margin="0,0,1,8" RadiusY="16" RadiusX="16" Fill="#FF454444" Opacity="0.25">
                            <Rectangle.Effect>
                                <BlurEffect/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Rectangle Margin="1,1,2,9" RadiusY="16" RadiusX="16">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.502,1.261" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE8EDF1"/>
                                    <GradientStop Color="White" Offset="0.836"/>
                                    <GradientStop Color="#FFE8EDF1" Offset="0.757"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="Rectangle" Margin="1,1,2,9" RadiusY="16" RadiusX="16">
                            <Rectangle.Fill>
                                <RadialGradientBrush RadiusY="0.411" RadiusX="0.641" Center="0.496,0.048" GradientOrigin="0.496,0.048">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="#00E8EDF1" Offset="1"/>
                                    <GradientStop Color="#7CE8EDF1" Offset="0.681"/>
                                </RadialGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        	<TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" Foreground="{StaticResource ButtonTextYellowBrush}" FontWeight="Bold"/>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Brushes -->
    <SolidColorBrush x:Key="TabContentBackground" Color="#FFE5E5E5"/>

    <!-- HeaderItemsControlTemplate  -->
    
    <ControlTemplate x:Key="HeaderItemsControlTemplate" TargetType="Controls:HeaderItemsControl">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Height="30" CornerRadius="12,12,12,12" Margin="0,0,0,10" BorderBrush="#FFFFFFFF" BorderThickness="2,2,2,2" x:Name="rightHeader" Canvas.ZIndex="1" Opacity="0.9" Background="{StaticResource headerBarBG}">
                <ItemsControl ItemsSource="{TemplateBinding Headers}" HorizontalAlignment="Center">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Border>
            <Controls:RoundedBox Grid.Row="1" />
            <ScrollViewer Width="{TemplateBinding Width}" 
                          Height="{TemplateBinding Height}" Grid.Row="1" d:LayoutOverrides="Margin" 
                          Style="{StaticResource ScrollViewerStyle}" 
                          Margin="{TemplateBinding Padding}"
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}">
                    <ItemsPresenter Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" d:LayoutOverrides="Margin" />
            </ScrollViewer>
        </Grid>
    </ControlTemplate>

    <!-- HeaderContentControlTemplate -->

    <ControlTemplate x:Key="HeaderContentControlTemplate" TargetType="Controls:HeaderContentControl">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Height="31" CornerRadius="12,12,12,12" Margin="0,0,0,10" BorderBrush="#FFFFFFFF" BorderThickness="2,2,2,2" x:Name="rightHeader" Canvas.ZIndex="1" Opacity="0.9" Background="{StaticResource headerBarBG}">
                <ItemsControl ItemsSource="{TemplateBinding Headers}" HorizontalAlignment="Center">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Border>
            <Controls:RoundedBox Grid.Row="1" />
            <ScrollViewer Margin="{TemplateBinding Padding}" 
                          Width="{TemplateBinding Width}" 
                          Height="{TemplateBinding Height}" Grid.Row="1" d:LayoutOverrides="Margin" 
                          Style="{StaticResource ScrollViewerStyle}"
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}">
                <ContentPresenter Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Content="{TemplateBinding Content}" d:LayoutOverrides="Margin" />
            </ScrollViewer>
        </Grid>
    </ControlTemplate>

    <!-- ItemsControlTemplate: не имеет сглаженных краев, scrollbar задается в шаблоне -->

    <ControlTemplate x:Key="ItemsControlExtended" TargetType="ItemsControl">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Controls:RoundedBox/>
            <ScrollViewer Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          Style="{StaticResource ScrollViewerStyle}" 
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                          Margin="{TemplateBinding Padding}">
                <ItemsPresenter Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
            </ScrollViewer>
        </Grid>
    </ControlTemplate>

    <!-- RoundContentControl Template -->
    
    <ControlTemplate x:Key="RoundContentControlTemplate" TargetType="ContentControl">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Controls:RoundedBox/>
            <ContentPresenter
                Content="{TemplateBinding Content}"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}"
                Margin="{TemplateBinding Padding}"/>
        </Grid>
    </ControlTemplate>

    <!-- RoundScrollableContentControlTemplate Template -->

    <ControlTemplate x:Key="RoundScrollableContentControlTemplate" TargetType="ContentControl">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			<Controls:RoundedBox />
            <ScrollViewer Width="{TemplateBinding Width}" 
                          Height="{TemplateBinding Height}" 
                          Style="{StaticResource ScrollViewerStyle}" 
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" 
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                          Margin="{TemplateBinding Padding}">
                <ContentPresenter Content="{TemplateBinding Content}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
            </ScrollViewer>
        </Grid>
	</ControlTemplate>
    
    <!-- ListBoxItemContainer Style -->

    <Style x:Key="ListBoxItemContainerStyle" TargetType="Controls:HistoryListItem">
        <Setter Property="Background">
    		<Setter.Value>
                <SolidColorBrush Color="#FFFFE27B"/>
    		</Setter.Value>
    	</Setter>
    	<Setter Property="Margin" Value="3,1" />
    	<Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    	<Setter Property="Template">
    		<Setter.Value>
                <ControlTemplate TargetType="Controls:HistoryListItem">
    				<Grid>
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="MouseOver"/>
    							<VisualState x:Name="Disabled"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="SelectionStates">
    							<VisualState x:Name="Unselected"/>
    							<VisualState x:Name="Selected"/>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SuccessState">
                                <VisualState x:Name="SuccessNormal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FFFFE27B" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundRect" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SuccessMouseOver">
                                    <Storyboard FillBehavior="HoldEnd">
                                        <ColorAnimation Duration="0:0:0.2" To="#FFFF9C00" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundRect" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SuccessSelected">
                                    <Storyboard FillBehavior="HoldEnd">
                                        <ColorAnimation Duration="0" To="#FFFF9C00" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundRect" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FailState">
                                <VisualState x:Name="FailNormal">
                                    <Storyboard>
                                		<ColorAnimation Duration="0" To="#FFFF9B57" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundRect" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>
                                <VisualState x:Name="FailMouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="#FFFF2300" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundRect" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>
                                <VisualState x:Name="FailSelected">
                                    <Storyboard>
                                		<ColorAnimation Duration="0" To="#FFFF2300" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundRect" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>
                            </VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Rectangle StrokeThickness="0" Stroke="Transparent" RadiusX="5" RadiusY="5" Fill="White" />
    					<Grid>
                            <Rectangle x:Name="BackgroundRect" Opacity="0.5" StrokeThickness="0" Stroke="Transparent" RadiusX="5" RadiusY="5" Fill="{TemplateBinding Background}" />
    						<Rectangle Stroke="#66557293" RadiusX="3" RadiusY="3">
    							<Rectangle.Fill>
    								<LinearGradientBrush StartPoint="-0.51,0.41" EndPoint="1.43,0.41">
    									<GradientStop Color="Transparent" Offset="0" />
    									<GradientStop Color="#60FFFFFF" Offset="1" />
    								</LinearGradientBrush>
    							</Rectangle.Fill>
    						</Rectangle>
    						<Grid>
    							<Grid.RowDefinitions>
    								<RowDefinition Height="0.6*" />
    								<RowDefinition Height="0.4*" />
    							</Grid.RowDefinitions>
    							<Rectangle RadiusX="3" RadiusY="3" Margin="3" Grid.RowSpan="1" Grid.Row="0">
    								<Rectangle.Fill>
    									<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
    										<GradientStop Color="#44FFFFFF" Offset="0" />
    										<GradientStop Color="#66FFFFFF" Offset="1" />
    									</LinearGradientBrush>
    								</Rectangle.Fill>
    							</Rectangle>
    						</Grid>
                            <ContentPresenter x:Name="ContentHost" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
    						<Rectangle Fill="{x:Null}" Stroke="#FFFFFFFF" RadiusX="3" RadiusY="3" Margin="1" />
    					</Grid>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    
    <!-- Filter panel Template -->
    
    <ControlTemplate x:Key="FilterPanelTemplate" TargetType="ContentControl">
        <Grid>
            <Rectangle StrokeThickness="0" Stroke="Transparent" RadiusX="5" RadiusY="5" Fill="White" />
            <Grid>
                <Rectangle x:Name="BackgroundRect" Opacity="0.5" StrokeThickness="0" Stroke="Transparent" RadiusX="5" RadiusY="5" Fill="{TemplateBinding Background}" />
                <Rectangle Stroke="#66557293" RadiusX="3" RadiusY="3">
                    <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="-0.51,0.41" EndPoint="1.43,0.41">
                            <GradientStop Color="Transparent" Offset="0" />
                            <GradientStop Color="#60FFFFFF" Offset="1" />
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.6*" />
                        <RowDefinition Height="0.4*" />
                    </Grid.RowDefinitions>
                    <Rectangle RadiusX="3" RadiusY="3" Margin="3" Grid.RowSpan="1" Grid.Row="0">
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                <GradientStop Color="#44FFFFFF" Offset="0" />
                                <GradientStop Color="#66FFFFFF" Offset="1" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Grid>
                <ContentPresenter x:Name="ContentHost" 
                                  Height="{TemplateBinding Height}" 
                                  Width="{TemplateBinding Width}" 
                                  Margin="{TemplateBinding Padding}"/>
                <Rectangle Fill="{x:Null}" Stroke="#FFFFFFFF" RadiusX="3" RadiusY="3" Margin="1" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <!-- ComboItemTemplate: OperationFilter-->

    <DataTemplate x:Key="ComboItemTemplate">
        <Grid d:DesignWidth="296.333" d:DesignHeight="29.333" HorizontalAlignment="Left">
            <CheckBox x:Name="Check" IsChecked="{Binding IsChecked, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{Binding Text}"/>
        </Grid>
    </DataTemplate>

</ResourceDictionary>